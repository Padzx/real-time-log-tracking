name: CI Pipeline

on:
  push:
    branches:
      - develop
      - main
      - feature/**
  pull_request:
    branches:
      - develop
      - main
      - feature/**

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-gradle.outputs.cache-hit }}  # Output para reuso do cache nas etapas seguintes
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java Installation
        run: |
          java -version
          echo "JAVA_HOME is set to: $JAVA_HOME"

      - name: Cache Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  log-ingestion:
    needs: setup
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'log-ingestion') || github.ref == 'refs/heads/feature/log-ingestion-microservice'
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Project - Log Ingestion
        run: ./gradlew :log-ingestion:clean :log-ingestion:build --warning-mode all

      - name: Run Unit Tests - Log Ingestion
        run: ./gradlew :log-ingestion:unitTest --warning-mode all

      - name: Publish Test Results - Log Ingestion
        uses: actions/upload-artifact@v3
        with:
          name: Log Ingestion Test Results
          path: '**/log-ingestion/build/test-results/**/*.xml'